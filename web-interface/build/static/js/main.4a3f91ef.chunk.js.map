{"version":3,"sources":["logic/api.js","components/Rate.js","logic/FXtaxes.js","components/NewRateCard.js","App.js","reportWebVitals.js","index.js"],"names":["ratesUrl","apiUrl","postRate","rateObj","fetch","method","body","JSON","stringify","headers","then","dat","status","getRates","response","json","responseData","Rate","params","className","rate","pair","from","amount","to","fee","feeAmount","mark","ISOdate","date","Date","year","getFullYear","month","getMonth","dt","getDate","hour","getHours","min","getMinutes","getDateFormat","FX","LoadingFxStatus","this","fixerServer","RatesMap","Map","res","data","success","fixerData","refreshRatesValues","set","rates","USD","ARS","BRL","convertAmount","get","toFixed","getFeePorcentage","markAmount","FXconverter","code","toast","error","NewRateCard","promps","useState","selectToValues","setselectToValues","selectFrom","selectTo","amontToConvert","cardObj","setCardObj","convert","document","querySelector","value","selectFromValue","selectToValue","amountConverted","getRate","Number","console","log","clickFrom","configure","id","onClick","type","aria-label","onChange","map","e","itemName","itemVal","disabled","newRateObj","api","refreshRatesFromApi","App","ratesList","setRatesList","useEffect","style","_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a3f91ef.chunk.js","sourcesContent":["// Api url\nconst apiUrl = \"http://127.0.0.1:4000\";\nconst ratesUrl = apiUrl + \"/rates\";\n\n// Get list of rates\nfunction getRates() {\n  return fetch(ratesUrl, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then((response) => response.json())\n    .then((responseData) => {\n      return responseData;\n    });\n}\n\n// Post new rate\nfunction postRate(rateObj) {\n  return fetch(ratesUrl, {\n    method: 'POST',\n    body: JSON.stringify(rateObj),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(dat => {\n    return dat.status;\n\n  });\n}\n\nexport default {\n  postRate,\n  getRates\n}","\nfunction Rate(params) {\n\n    // Format date from db\n    function getDateFormat(ISOdate) {\n        let date = new Date(ISOdate);\n        let year = date.getFullYear();\n        let month = date.getMonth() + 1;\n        let dt = date.getDate();\n        let hour = date.getHours();\n        let min = date.getMinutes();\n\n        if (dt < 10) {\n            dt = '0' + dt;\n        }\n        if (month < 10) {\n            month = '0' + month;\n        }\n\n        return (<p className=\"m-0 mt-1 text-center text-secondary\">{dt + '/' + month + '/' + year + ' ' + hour + ':' + min}</p>);\n    }\n\n    return (\n        <div className=\"col-4 mb-2\">\n\n            <div className=\"card border border-primary cardShadown\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"container\">\n                                <p className=\"text-center\">{params.rate.pair.from.amount + \" \" + params.rate.pair.from.rate}</p>\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <div className=\"d-flex justify-content-center bd-highlight\">\n                                <h6 className=\"bd-highlight text-primary\">TO</h6>\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <div className=\"container\">\n                                <p className=\"text-center\">{params.rate.pair.to.amount + \" \" + params.rate.pair.to.rate}</p>\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <p className=\"m-0\">{\"Fee \" + params.rate.fee + \"%\"}</p>\n                            <p className=\"m-0\">{\"Fee amount \" + params.rate.feeAmount + \" \" + params.rate.pair.from.rate}</p>\n                            <p className=\"m-0 mb-3\">{\"Mark-up \" + params.rate.mark + \" \" + params.rate.pair.from.rate}</p>\n                        </div>\n                        <div className=\"col-12\">\n                            <hr className=\"mx-1 my-0\"></hr>\n                        </div>\n                        <div className=\"col-12\">\n                            {getDateFormat(params.rate.date)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Rate;","// FX converter class\nexport default class FX {\n\n    constructor(LoadingFxStatus) {\n        this.fixerServer = 'http://data.fixer.io/api/latest?access_key=ffcc344a3f31700c0020d166fd17ea96';\n        this.RatesMap = new Map();\n        this.LoadingFxStatus = LoadingFxStatus;\n\n        fetch(this.fixerServer)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    this.fixerData = data;\n                    this.refreshRatesValues();\n                    this.LoadingFxStatus('OK');\n                } else {\n                    this.LoadingFxStatus('ERR');\n                }\n            });\n    }\n\n    // Set pairs values\n    refreshRatesValues() {\n        this.RatesMap.set('EURUSD', this.fixerData.rates.USD);\n        this.RatesMap.set('EURARS', this.fixerData.rates.ARS);\n        this.RatesMap.set('EURBRL', this.fixerData.rates.BRL);\n        this.RatesMap.set('USDARS', this.fixerData.rates.ARS / this.fixerData.rates.USD);\n        this.RatesMap.set('USDBRL', this.fixerData.rates.BRL / this.fixerData.rates.USD);\n        this.RatesMap.set('BRLARS', this.fixerData.rates.ARS / this.fixerData.rates.BRL);\n    }\n\n    // Get fee porcentage from pair\n    getFeePorcentage(pair) {\n        switch (pair) {\n            case 'EURUSD':\n                return 1;\n            case 'EURARS':\n                return 3;\n            case 'EURBRL':\n                return 4;\n            case 'USDARS':\n                return 2;\n            case 'USDBRL':\n                return 1;\n            case 'BRLARS':\n                return 7;\n            default:\n                return 5;\n        }\n    }\n\n    // Get converted amount\n    getRate(pair, amount) {\n        let rateObj = {};\n\n        rateObj.convertAmount = (this.RatesMap.get(pair) * amount).toFixed(2);\n        rateObj.fee = this.getFeePorcentage(pair);\n        let feeAmount = amount * (this.getFeePorcentage(pair) / 100);\n        rateObj.feeAmount = feeAmount.toFixed(2);\n        let markAmount = amount + feeAmount;\n        rateObj.mark = markAmount.toFixed(2);\n        return rateObj;\n    }\n\n}","import React, { useState } from \"react\";\nimport FX from '../logic/FXtaxes';\nimport api from '../logic/api';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// FX rate convertion logic\nlet FXconverter = new FX(LoadingFxStatus);\n// FX data status\nfunction LoadingFxStatus(code) {\n    switch (code) {\n        case 'OK':\n            toast.success(\"Fixer data loaded\");\n            break;\n        case 'ERR':\n            toast.error(\"Err loading fixer data. try again\");\n            break;\n        default:\n            toast.error(\"Err loading fixer data. try again\");\n            break;\n    }\n}\n\nfunction NewRateCard(promps) {\n\n    const [selectToValues, setselectToValues] = useState([\"USD\", \"ARS\", \"BRL\"]);\n    const [cardObj, setCardObj] = useState({\n        convertAmount: 0,\n        fee: 0,\n        feeAmount: 0,\n        mark: 0,\n        selectFrom: 'EUR',\n        selectTo: 'USD',\n        amontToConvert: 0\n    });\n    toast.configure();\n\n    // convert amount\n    function convert() {\n        let amontToConvert = document.querySelector('#amountToconvert').value;\n        let selectFromValue = document.querySelector('#selectFrom').value;\n        let selectToValue = document.querySelector('#selectTo').value;\n        let pair = selectFromValue + selectToValue;\n        let amountConverted = FXconverter.getRate(pair, Number(amontToConvert));\n        console.log(amountConverted)\n        setCardObj({\n            convertAmount: amountConverted.convertAmount,\n            fee: amountConverted.fee,\n            feeAmount: amountConverted.feeAmount,\n            mark: amountConverted.mark,\n            selectFrom: selectFromValue,\n            selectTo: selectToValue,\n            amontToConvert: amontToConvert\n        })\n    }\n\n    // Change pair \n    function clickFrom() {\n        let selectFrom = document.querySelector('#selectFrom');\n        switch (selectFrom.value) {\n            case 'EUR':\n                setselectToValues([\"USD\", \"ARS\", \"BRL\"]);\n                break;\n            case 'USD':\n                setselectToValues([\"ARS\", \"BRL\"]);\n                break;\n            case 'BRL':\n                setselectToValues([\"ARS\"]);\n                break;\n            default:\n                setselectToValues([\"USD\", \"ARS\", \"BRL\"]);\n                break;\n        }\n        convert();\n\n    }\n\n    // Clcick in boy \n    function clcikBuy() {\n\n        let newRateObj = {\n            pair: {\n                from: {\n                    rate: cardObj.selectFrom,\n                    amount: Number(cardObj.amontToConvert)\n                },\n                to: {\n                    rate: cardObj.selectTo,\n                    amount: Number(cardObj.convertAmount)\n                }\n            },\n            fee: Number(cardObj.fee),\n            feeAmount: Number(cardObj.feeAmount),\n            mark: Number(cardObj.mark)\n        }\n        api.postRate(newRateObj).then(res => {\n            if (res === 201) {\n                toast.success(\"Rate saved\");\n                promps.refreshRatesFromApi();\n            } else if (res === 409) {\n                toast.error(\"Err wrong rate information\");\n            } else {\n                toast.error(\"Err saving Rate\");\n            }\n\n        });\n    }\n\n    // Generate selectTo options\n    function selectToItemGen(itemName, itemVal) {\n        return (<option key={itemVal} value={itemVal} onClick={clickFrom}>{itemName}</option>)\n    }\n\n\n    return (\n        <div>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    New Rate\n             </div>\n                <div className=\"card-body\">\n\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <select className=\"custom-select\" id=\"selectFrom\">\n                                        <option value=\"EUR\" onClick={clickFrom}>EUR</option>\n                                        <option value=\"USD\" onClick={clickFrom}>USD</option>\n                                        <option value=\"BRL\" onClick={clickFrom}>BRL</option>\n                                    </select>\n                                </div>\n                                <input type=\"number\" className=\"form-control\" aria-label=\"Text input with dropdown button\" onChange={convert} id=\"amountToconvert\" />\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <div className=\"d-flex justify-content-center bd-highlight\">\n                                <h3 className=\"bd-highlight text-primary\">=</h3>\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <select className=\"custom-select\" id=\"selectTo\">\n                                        {\n                                            selectToValues.map(e => selectToItemGen(e, e))\n                                        }\n                                    </select>\n                                </div>\n                                <input type=\"number\" className=\"form-control\" aria-label=\"Text input with dropdown button\" id=\"amountConverted\" value={cardObj.convertAmount} disabled />\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <div className=\"row\">\n                                <p className=\"col-5 font-weight-bold\">Fee:</p>\n                                <p className=\"col-7\" id=\"cardFee\">{cardObj.fee + \"%\"}</p>\n                            </div>\n                            <div className=\"row\">\n                                <p className=\"col-5 font-weight-bold\">Fee amount</p>\n                                <p className=\"col-7\" id=\"cardFeeAmount\">{cardObj.feeAmount + \" \" + cardObj.selectFrom}</p>\n                            </div>\n                            <div className=\"row\">\n                                <p className=\"col-5 font-weight-bold\">Mark-up</p>\n                                <p className=\"col-7\" id=\"cardMark\">{cardObj.mark + \" \" + cardObj.selectFrom}</p>\n                            </div>\n                        </div>\n                        <div className=\"col-12 mt-2\">\n                            <div className=\"d-flex justify-content-center bd-highlight\">\n                                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={clcikBuy}>Buy</button>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NewRateCard;","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport api from './logic/api';\nimport Rate from './components/Rate';\nimport NewRateCard from './components/NewRateCard';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n\n  const [ratesList, setRatesList] = useState([]);\n\n  // Get Rates list\n  function refreshRatesFromApi() {\n    api.getRates().then(data => {\n      setRatesList(data);\n    });\n  }\n\n  useEffect(() => {\n\n    refreshRatesFromApi();\n\n  }, []);\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5\">\n\n        <div className=\"col-8\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Rates List\n           </div>\n            <div className=\"card-body\">\n              <div className=\"row overflow-auto\" style={{ 'maxHeight': '75vh' }}>\n                {\n                  ratesList.map(rate => <Rate rate={rate} key={rate._id} />)\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-4\">\n          {\n            <NewRateCard refreshRatesFromApi={refreshRatesFromApi} />\n          }\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}