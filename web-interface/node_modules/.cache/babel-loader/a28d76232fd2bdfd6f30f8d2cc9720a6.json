{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ulises/Documentos/ULISES/CV/challenge/web-interface/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport FX from './logic/FXtaxes';\nimport api from './logic/api';\nimport Rate from './components/Rate';\nimport newRateCard from './components/NewRateCard';\n\nfunction App() {\n  _s();\n\n  const FXconverter = new FX();\n  const [selectToValues, setselectToValues] = useState([\"USD\", \"ARS\", \"BRL\"]);\n  const [ratesList, setRatesList] = useState([]);\n\n  function convert() {\n    let amontToConvert = document.querySelector('#amountToconvert').value;\n    let selectFromValue = document.querySelector('#selectFrom').value;\n    let pair = selectFromValue + document.querySelector('#selectTo').value;\n    let amountConverted = FXconverter.getRate(pair, Number(amontToConvert));\n    console.log(amountConverted);\n    document.querySelector('#amountConverted').value = amountConverted.convertAmount;\n    document.querySelector('#cardFee').innerText = amountConverted.fee + \"%\";\n    document.querySelector('#cardFeeAmount').innerText = amountConverted.feeAmount + \" \" + selectFromValue;\n    document.querySelector('#cardMark').innerText = amountConverted.mark + \" \" + selectFromValue;\n  }\n\n  function clickFrom() {\n    let selectFrom = document.querySelector('#selectFrom');\n\n    switch (selectFrom.value) {\n      case 'EUR':\n        setselectToValues([\"USD\", \"ARS\", \"BRL\"]);\n        break;\n\n      case 'USD':\n        setselectToValues([\"ARS\", \"BRL\"]);\n        break;\n\n      case 'BRL':\n        setselectToValues([\"ARS\"]);\n        break;\n    }\n  }\n\n  function clcikBuy() {\n    let newRateObj = {\n      pair: {\n        from: {\n          rate: document.querySelector('#selectFrom').value,\n          amount: Number(document.querySelector('#amountToconvert').value)\n        },\n        to: {\n          rate: document.querySelector('#selectTo').value,\n          amount: Number(document.querySelector('#amountConverted').value)\n        }\n      },\n      fee: Number(document.querySelector('#cardFee').innerText),\n      feeAmount: Number(document.querySelector('#cardFeeAmount').innerText),\n      mark: Number(document.querySelector('#cardMark').innerText)\n    };\n    api.postRate(newRateObj).then(res => {\n      if (res == 201) refreshRatesFromApi();\n    });\n  }\n\n  function selectToItemGen(itemName, itemVal) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: itemVal,\n      children: itemName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  function refreshRatesFromApi() {\n    api.getRates().then(data => {\n      setRatesList(data);\n    });\n  }\n\n  useEffect(() => {\n    refreshRatesFromApi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Rates List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: ratesList.map(rate => /*#__PURE__*/_jsxDEV(Rate, {\n                rate: rate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"newRateCard\", {\n          refreshRatesFromApi: refreshRatesFromApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"By2NoZ7o0odXlpA/18k6Jgv6yIY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ulises/Documentos/ULISES/CV/challenge/web-interface/src/App.js"],"names":["React","useEffect","useState","FX","api","Rate","newRateCard","App","FXconverter","selectToValues","setselectToValues","ratesList","setRatesList","convert","amontToConvert","document","querySelector","value","selectFromValue","pair","amountConverted","getRate","Number","console","log","convertAmount","innerText","fee","feeAmount","mark","clickFrom","selectFrom","clcikBuy","newRateObj","from","rate","amount","to","postRate","then","res","refreshRatesFromApi","selectToItemGen","itemName","itemVal","getRates","data","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport FX from './logic/FXtaxes';\nimport api from './logic/api';\nimport Rate from './components/Rate';\nimport newRateCard from './components/NewRateCard';\n\nfunction App() {\n\n  const FXconverter = new FX();\n  const [selectToValues, setselectToValues] = useState([\"USD\", \"ARS\", \"BRL\"]);\n  const [ratesList, setRatesList] = useState([]);\n\n  function convert() {\n    let amontToConvert = document.querySelector('#amountToconvert').value;\n    let selectFromValue = document.querySelector('#selectFrom').value;\n    let pair = selectFromValue + document.querySelector('#selectTo').value;\n    let amountConverted = FXconverter.getRate(pair, Number(amontToConvert));\n    console.log(amountConverted)\n    document.querySelector('#amountConverted').value = amountConverted.convertAmount;\n    document.querySelector('#cardFee').innerText = amountConverted.fee + \"%\";\n    document.querySelector('#cardFeeAmount').innerText = amountConverted.feeAmount + \" \" + selectFromValue;\n    document.querySelector('#cardMark').innerText = amountConverted.mark + \" \" + selectFromValue;\n  }\n\n  function clickFrom() {\n    let selectFrom = document.querySelector('#selectFrom');\n    switch (selectFrom.value) {\n      case 'EUR':\n        setselectToValues([\"USD\", \"ARS\", \"BRL\"]);\n        break;\n      case 'USD':\n        setselectToValues([\"ARS\", \"BRL\"]);\n        break;\n      case 'BRL':\n        setselectToValues([\"ARS\"]);\n        break;\n    }\n\n  }\n\n  function clcikBuy() {\n    let newRateObj = {\n      pair: {\n        from: {\n          rate: document.querySelector('#selectFrom').value,\n          amount: Number(document.querySelector('#amountToconvert').value)\n        },\n        to: {\n          rate: document.querySelector('#selectTo').value,\n          amount: Number(document.querySelector('#amountConverted').value)\n        }\n      },\n      fee: Number(document.querySelector('#cardFee').innerText),\n      feeAmount: Number(document.querySelector('#cardFeeAmount').innerText),\n      mark: Number(document.querySelector('#cardMark').innerText)\n    }\n    api.postRate(newRateObj).then(res => {\n      if (res == 201)\n        refreshRatesFromApi();\n\n    });\n  }\n\n  function selectToItemGen(itemName, itemVal) {\n    return (<option value={itemVal}>{itemName}</option>)\n  }\n\n  function refreshRatesFromApi() {\n    api.getRates().then(data => {\n      setRatesList(data);\n    });\n  }\n\n  useEffect(() => {\n\n    refreshRatesFromApi();\n\n  }, []);\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5\">\n\n        <div className=\"col-8\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Rates List\n        </div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                {\n                  ratesList.map(rate => <Rate rate={rate} />)\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-4\">\n                {\n                  <newRateCard refreshRatesFromApi={refreshRatesFromApi}/>\n                }\n         {/*\n          <div className=\"card\">\n            <div className=\"card-header\">\n              New Rate\n             </div>\n            <div className=\"card-body\">\n\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                      <select className=\"custom-select\" id=\"selectFrom\">\n                        <option value=\"EUR\" onClick={clickFrom}>EUR</option>\n                        <option value=\"USD\" onClick={clickFrom}>USD</option>\n                        <option value=\"BRL\" onClick={clickFrom}>BRL</option>\n                      </select>\n                    </div>\n                    <input type=\"number\" className=\"form-control\" aria-label=\"Text input with dropdown button\" onChange={convert} id=\"amountToconvert\" />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"d-flex justify-content-center bd-highlight\">\n                    <h3 className=\"bd-highlight text-primary\">=</h3>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                      <select className=\"custom-select\" id=\"selectTo\">\n                        {\n                          selectToValues.map(e => selectToItemGen(e, e))\n                        }\n                      </select>\n                    </div>\n                    <input type=\"number\" className=\"form-control\" aria-label=\"Text input with dropdown button\" id=\"amountConverted\" disabled />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"row\">\n                    <p className=\"col-5 font-weight-bold\">Fee:</p>\n                    <p className=\"col-7\" id=\"cardFee\"></p>\n                  </div>\n                  <div className=\"row\">\n                    <p className=\"col-5 font-weight-bold\">Fee amount</p>\n                    <p className=\"col-7\" id=\"cardFeeAmount\"></p>\n                  </div>\n                  <div className=\"row\">\n                    <p className=\"col-5 font-weight-bold\">Mark-up</p>\n                    <p className=\"col-7\" id=\"cardMark\"></p>\n                  </div>\n                </div>\n                <div className=\"col-12 mt-2\">\n                  <div className=\"d-flex justify-content-center bd-highlight\">\n                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={clcikBuy}>Buy</button>\n                  </div>\n\n                </div>\n              </div>\n\n            </div>\n          </div>*/\n}\n\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}