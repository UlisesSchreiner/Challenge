{"ast":null,"code":"import _classCallCheck from\"/home/ulises/Documentos/ULISES/CV/challenge/web-interface/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ulises/Documentos/ULISES/CV/challenge/web-interface/node_modules/@babel/runtime/helpers/esm/createClass\";// FX converter class\nvar FX=/*#__PURE__*/function(){function FX(LoadingFxStatus){var _this=this;_classCallCheck(this,FX);this.fixerServer='http://data.fixer.io/api/latest?access_key=ffcc344a3f31700c0020d166fd17ea96';this.RatesMap=new Map();this.LoadingFxStatus=LoadingFxStatus;fetch(this.fixerServer).then(function(res){return res.json();}).then(function(data){if(data.success){_this.fixerData=data;_this.refreshRatesValues();_this.LoadingFxStatus('OK');}else{_this.LoadingFxStatus('ERR');}});}// Set pairs values\n_createClass(FX,[{key:\"refreshRatesValues\",value:function refreshRatesValues(){this.RatesMap.set('EURUSD',this.fixerData.rates.USD);this.RatesMap.set('EURARS',this.fixerData.rates.ARS);this.RatesMap.set('EURBRL',this.fixerData.rates.BRL);this.RatesMap.set('USDARS',this.fixerData.rates.ARS/this.fixerData.rates.USD);this.RatesMap.set('USDBRL',this.fixerData.rates.BRL/this.fixerData.rates.USD);this.RatesMap.set('BRLARS',this.fixerData.rates.ARS/this.fixerData.rates.BRL);}// Get fee porcentage from pair\n},{key:\"getFeePorcentage\",value:function getFeePorcentage(pair){switch(pair){case'EURUSD':return 1;case'EURARS':return 3;case'EURBRL':return 4;case'USDARS':return 2;case'USDBRL':return 1;case'BRLARS':return 7;default:return 5;}}// Get converted amount\n},{key:\"getRate\",value:function getRate(pair,amount){var rateObj={};rateObj.convertAmount=(this.RatesMap.get(pair)*amount).toFixed(2);rateObj.fee=this.getFeePorcentage(pair);var feeAmount=amount*(this.getFeePorcentage(pair)/100);rateObj.feeAmount=feeAmount.toFixed(2);var markAmount=amount+feeAmount;rateObj.mark=markAmount.toFixed(2);return rateObj;}}]);return FX;}();export{FX as default};","map":{"version":3,"sources":["/home/ulises/Documentos/ULISES/CV/challenge/web-interface/src/logic/FXtaxes.js"],"names":["FX","LoadingFxStatus","fixerServer","RatesMap","Map","fetch","then","res","json","data","success","fixerData","refreshRatesValues","set","rates","USD","ARS","BRL","pair","amount","rateObj","convertAmount","get","toFixed","fee","getFeePorcentage","feeAmount","markAmount","mark"],"mappings":"sRAAA;GACqBA,CAAAA,E,yBAEjB,YAAYC,eAAZ,CAA6B,yCACzB,KAAKC,WAAL,CAAmB,6EAAnB,CACA,KAAKC,QAAL,CAAgB,GAAIC,CAAAA,GAAJ,EAAhB,CACA,KAAKH,eAAL,CAAuBA,eAAvB,CAEAI,KAAK,CAAC,KAAKH,WAAN,CAAL,CACKI,IADL,CACU,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADb,EAEKF,IAFL,CAEU,SAAAG,IAAI,CAAI,CACV,GAAIA,IAAI,CAACC,OAAT,CAAkB,CACd,KAAI,CAACC,SAAL,CAAiBF,IAAjB,CACA,KAAI,CAACG,kBAAL,GACA,KAAI,CAACX,eAAL,CAAqB,IAArB,EACH,CAJD,IAIO,CACH,KAAI,CAACA,eAAL,CAAqB,KAArB,EACH,CACJ,CAVL,EAWH,CAED;8EACqB,CACjB,KAAKE,QAAL,CAAcU,GAAd,CAAkB,QAAlB,CAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBC,GAAjD,EACA,KAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,CAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAAjD,EACA,KAAKb,QAAL,CAAcU,GAAd,CAAkB,QAAlB,CAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBG,GAAjD,EACA,KAAKd,QAAL,CAAcU,GAAd,CAAkB,QAAlB,CAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAArB,CAA2B,KAAKL,SAAL,CAAeG,KAAf,CAAqBC,GAA5E,EACA,KAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,CAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBG,GAArB,CAA2B,KAAKN,SAAL,CAAeG,KAAf,CAAqBC,GAA5E,EACA,KAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,CAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAArB,CAA2B,KAAKL,SAAL,CAAeG,KAAf,CAAqBG,GAA5E,EACH,CAED;0DACiBC,I,CAAM,CACnB,OAAQA,IAAR,EACI,IAAK,QAAL,CACI,MAAO,EAAP,CACJ,IAAK,QAAL,CACI,MAAO,EAAP,CACJ,IAAK,QAAL,CACI,MAAO,EAAP,CACJ,IAAK,QAAL,CACI,MAAO,EAAP,CACJ,IAAK,QAAL,CACI,MAAO,EAAP,CACJ,IAAK,QAAL,CACI,MAAO,EAAP,CACJ,QACI,MAAO,EAAP,CAdR,CAgBH,CAED;wCACQA,I,CAAMC,M,CAAQ,CAClB,GAAIC,CAAAA,OAAO,CAAG,EAAd,CAEAA,OAAO,CAACC,aAAR,CAAwB,CAAC,KAAKlB,QAAL,CAAcmB,GAAd,CAAkBJ,IAAlB,EAA0BC,MAA3B,EAAmCI,OAAnC,CAA2C,CAA3C,CAAxB,CACAH,OAAO,CAACI,GAAR,CAAc,KAAKC,gBAAL,CAAsBP,IAAtB,CAAd,CACA,GAAIQ,CAAAA,SAAS,CAAGP,MAAM,EAAI,KAAKM,gBAAL,CAAsBP,IAAtB,EAA8B,GAAlC,CAAtB,CACAE,OAAO,CAACM,SAAR,CAAoBA,SAAS,CAACH,OAAV,CAAkB,CAAlB,CAApB,CACA,GAAII,CAAAA,UAAU,CAAGR,MAAM,CAAGO,SAA1B,CACAN,OAAO,CAACQ,IAAR,CAAeD,UAAU,CAACJ,OAAX,CAAmB,CAAnB,CAAf,CACA,MAAOH,CAAAA,OAAP,CACH,C,yBA7DgBpB,E","sourcesContent":["// FX converter class\nexport default class FX {\n\n    constructor(LoadingFxStatus) {\n        this.fixerServer = 'http://data.fixer.io/api/latest?access_key=ffcc344a3f31700c0020d166fd17ea96';\n        this.RatesMap = new Map();\n        this.LoadingFxStatus = LoadingFxStatus;\n\n        fetch(this.fixerServer)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    this.fixerData = data;\n                    this.refreshRatesValues();\n                    this.LoadingFxStatus('OK');\n                } else {\n                    this.LoadingFxStatus('ERR');\n                }\n            });\n    }\n\n    // Set pairs values\n    refreshRatesValues() {\n        this.RatesMap.set('EURUSD', this.fixerData.rates.USD);\n        this.RatesMap.set('EURARS', this.fixerData.rates.ARS);\n        this.RatesMap.set('EURBRL', this.fixerData.rates.BRL);\n        this.RatesMap.set('USDARS', this.fixerData.rates.ARS / this.fixerData.rates.USD);\n        this.RatesMap.set('USDBRL', this.fixerData.rates.BRL / this.fixerData.rates.USD);\n        this.RatesMap.set('BRLARS', this.fixerData.rates.ARS / this.fixerData.rates.BRL);\n    }\n\n    // Get fee porcentage from pair\n    getFeePorcentage(pair) {\n        switch (pair) {\n            case 'EURUSD':\n                return 1;\n            case 'EURARS':\n                return 3;\n            case 'EURBRL':\n                return 4;\n            case 'USDARS':\n                return 2;\n            case 'USDBRL':\n                return 1;\n            case 'BRLARS':\n                return 7;\n            default:\n                return 5;\n        }\n    }\n\n    // Get converted amount\n    getRate(pair, amount) {\n        let rateObj = {};\n\n        rateObj.convertAmount = (this.RatesMap.get(pair) * amount).toFixed(2);\n        rateObj.fee = this.getFeePorcentage(pair);\n        let feeAmount = amount * (this.getFeePorcentage(pair) / 100);\n        rateObj.feeAmount = feeAmount.toFixed(2);\n        let markAmount = amount + feeAmount;\n        rateObj.mark = markAmount.toFixed(2);\n        return rateObj;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}