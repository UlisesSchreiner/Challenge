{"ast":null,"code":"// FX converter class\nexport default class FX {\n  constructor(LoadingFxStatus) {\n    this.fixerServer = 'http://data.fixer.io/api/latest?access_key=ffcc344a3f31700c0020d166fd17ea96';\n    this.RatesMap = new Map();\n    this.LoadingFxStatus = LoadingFxStatus;\n    fetch(this.fixerServer).then(res => res.json()).then(data => {\n      if (data.success) {\n        this.fixerData = data;\n        this.refreshRatesValues();\n        this.LoadingFxStatus('OK');\n      } else {\n        this.LoadingFxStatus('ERR');\n      }\n    });\n  } // Set pairs values\n\n\n  refreshRatesValues() {\n    this.RatesMap.set('EURUSD', this.fixerData.rates.USD);\n    this.RatesMap.set('EURARS', this.fixerData.rates.ARS);\n    this.RatesMap.set('EURBRL', this.fixerData.rates.BRL);\n    this.RatesMap.set('USDARS', this.fixerData.rates.ARS / this.fixerData.rates.USD);\n    this.RatesMap.set('USDBRL', this.fixerData.rates.BRL / this.fixerData.rates.USD);\n    this.RatesMap.set('BRLARS', this.fixerData.rates.ARS / this.fixerData.rates.BRL);\n  } // Get fee porcentage from pair\n\n\n  getFeePorcentage(pair) {\n    switch (pair) {\n      case 'EURUSD':\n        return 1;\n\n      case 'EURARS':\n        return 3;\n\n      case 'EURBRL':\n        return 4;\n\n      case 'USDARS':\n        return 2;\n\n      case 'USDBRL':\n        return 1;\n\n      case 'BRLARS':\n        return 7;\n\n      default:\n        return 5;\n    }\n  } // Get converted amount\n\n\n  getRate(pair, amount) {\n    let rateObj = {};\n    rateObj.convertAmount = (this.RatesMap.get(pair) * amount).toFixed(2);\n    rateObj.fee = this.getFeePorcentage(pair);\n    let feeAmount = amount * (this.getFeePorcentage(pair) / 100);\n    rateObj.feeAmount = feeAmount.toFixed(2);\n    let markAmount = amount + feeAmount;\n    rateObj.mark = markAmount.toFixed(2);\n    return rateObj;\n  }\n\n}","map":{"version":3,"sources":["/home/ulises/Documentos/ULISES/CV/challenge/web-interface/src/logic/FXtaxes.js"],"names":["FX","constructor","LoadingFxStatus","fixerServer","RatesMap","Map","fetch","then","res","json","data","success","fixerData","refreshRatesValues","set","rates","USD","ARS","BRL","getFeePorcentage","pair","getRate","amount","rateObj","convertAmount","get","toFixed","fee","feeAmount","markAmount","mark"],"mappings":"AAAA;AACA,eAAe,MAAMA,EAAN,CAAS;AAEpBC,EAAAA,WAAW,CAACC,eAAD,EAAkB;AACzB,SAAKC,WAAL,GAAmB,6EAAnB;AACA,SAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACA,SAAKH,eAAL,GAAuBA,eAAvB;AAEAI,IAAAA,KAAK,CAAC,KAAKH,WAAN,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,OAAT,EAAkB;AACd,aAAKC,SAAL,GAAiBF,IAAjB;AACA,aAAKG,kBAAL;AACA,aAAKX,eAAL,CAAqB,IAArB;AACH,OAJD,MAIO;AACH,aAAKA,eAAL,CAAqB,KAArB;AACH;AACJ,KAVL;AAWH,GAlBmB,CAoBpB;;;AACAW,EAAAA,kBAAkB,GAAG;AACjB,SAAKT,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBC,GAAjD;AACA,SAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAAjD;AACA,SAAKb,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBG,GAAjD;AACA,SAAKd,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAArB,GAA2B,KAAKL,SAAL,CAAeG,KAAf,CAAqBC,GAA5E;AACA,SAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBG,GAArB,GAA2B,KAAKN,SAAL,CAAeG,KAAf,CAAqBC,GAA5E;AACA,SAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAArB,GAA2B,KAAKL,SAAL,CAAeG,KAAf,CAAqBG,GAA5E;AACH,GA5BmB,CA8BpB;;;AACAC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,YAAQA,IAAR;AACI,WAAK,QAAL;AACI,eAAO,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,CAAP;;AACJ;AACI,eAAO,CAAP;AAdR;AAgBH,GAhDmB,CAkDpB;;;AACAC,EAAAA,OAAO,CAACD,IAAD,EAAOE,MAAP,EAAe;AAClB,QAAIC,OAAO,GAAG,EAAd;AAEAA,IAAAA,OAAO,CAACC,aAAR,GAAwB,CAAC,KAAKpB,QAAL,CAAcqB,GAAd,CAAkBL,IAAlB,IAA0BE,MAA3B,EAAmCI,OAAnC,CAA2C,CAA3C,CAAxB;AACAH,IAAAA,OAAO,CAACI,GAAR,GAAc,KAAKR,gBAAL,CAAsBC,IAAtB,CAAd;AACA,QAAIQ,SAAS,GAAGN,MAAM,IAAI,KAAKH,gBAAL,CAAsBC,IAAtB,IAA8B,GAAlC,CAAtB;AACAG,IAAAA,OAAO,CAACK,SAAR,GAAoBA,SAAS,CAACF,OAAV,CAAkB,CAAlB,CAApB;AACA,QAAIG,UAAU,GAAGP,MAAM,GAAGM,SAA1B;AACAL,IAAAA,OAAO,CAACO,IAAR,GAAeD,UAAU,CAACH,OAAX,CAAmB,CAAnB,CAAf;AACA,WAAOH,OAAP;AACH;;AA7DmB","sourcesContent":["// FX converter class\nexport default class FX {\n\n    constructor(LoadingFxStatus) {\n        this.fixerServer = 'http://data.fixer.io/api/latest?access_key=ffcc344a3f31700c0020d166fd17ea96';\n        this.RatesMap = new Map();\n        this.LoadingFxStatus = LoadingFxStatus;\n\n        fetch(this.fixerServer)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    this.fixerData = data;\n                    this.refreshRatesValues();\n                    this.LoadingFxStatus('OK');\n                } else {\n                    this.LoadingFxStatus('ERR');\n                }\n            });\n    }\n\n    // Set pairs values\n    refreshRatesValues() {\n        this.RatesMap.set('EURUSD', this.fixerData.rates.USD);\n        this.RatesMap.set('EURARS', this.fixerData.rates.ARS);\n        this.RatesMap.set('EURBRL', this.fixerData.rates.BRL);\n        this.RatesMap.set('USDARS', this.fixerData.rates.ARS / this.fixerData.rates.USD);\n        this.RatesMap.set('USDBRL', this.fixerData.rates.BRL / this.fixerData.rates.USD);\n        this.RatesMap.set('BRLARS', this.fixerData.rates.ARS / this.fixerData.rates.BRL);\n    }\n\n    // Get fee porcentage from pair\n    getFeePorcentage(pair) {\n        switch (pair) {\n            case 'EURUSD':\n                return 1;\n            case 'EURARS':\n                return 3;\n            case 'EURBRL':\n                return 4;\n            case 'USDARS':\n                return 2;\n            case 'USDBRL':\n                return 1;\n            case 'BRLARS':\n                return 7;\n            default:\n                return 5;\n        }\n    }\n\n    // Get converted amount\n    getRate(pair, amount) {\n        let rateObj = {};\n\n        rateObj.convertAmount = (this.RatesMap.get(pair) * amount).toFixed(2);\n        rateObj.fee = this.getFeePorcentage(pair);\n        let feeAmount = amount * (this.getFeePorcentage(pair) / 100);\n        rateObj.feeAmount = feeAmount.toFixed(2);\n        let markAmount = amount + feeAmount;\n        rateObj.mark = markAmount.toFixed(2);\n        return rateObj;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}