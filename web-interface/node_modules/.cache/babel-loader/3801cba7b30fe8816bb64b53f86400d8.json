{"ast":null,"code":"export default class FX {\n  constructor(LoadingFxStatus) {\n    this.fixerServer = 'http://data.fixer.io/api/latest?access_key=ffcc344a3f31700c0020d166fd17ea96';\n    this.RatesMap = new Map();\n    this.LoadingFxStatus = LoadingFxStatus;\n    fetch(this.fixerServer).then(res => res.json()).then(data => {\n      if (data.success) {\n        this.fixerData = data;\n        this.refreshRatesValues();\n        this.LoadingFxStatus('OK');\n      } else {\n        this.LoadingFxStatus('ERR');\n      }\n    });\n  }\n\n  refreshRatesValues() {\n    this.RatesMap.set('EURUSD', this.fixerData.rates.USD);\n    this.RatesMap.set('EURARS', this.fixerData.rates.ARS);\n    this.RatesMap.set('EURBRL', this.fixerData.rates.BRL);\n    this.RatesMap.set('USDARS', this.fixerData.rates.ARS / this.fixerData.rates.USD);\n    this.RatesMap.set('USDBRL', this.fixerData.rates.BRL / this.fixerData.rates.USD);\n    this.RatesMap.set('BRLARS', this.fixerData.rates.ARS / this.fixerData.rates.BRL);\n  }\n\n  getRate(pair, amount) {\n    let rateObj = {};\n    rateObj.convertAmount = (this.RatesMap.get(pair) * amount).toFixed(2);\n    rateObj.fee = getFeePorcentage(pair);\n    let feeAmount = amount * (getFeePorcentage(pair) / 100);\n    rateObj.feeAmount = feeAmount.toFixed(2);\n    let markAmount = amount + feeAmount;\n    rateObj.mark = markAmount.toFixed(2);\n    return rateObj;\n  }\n\n  getFeePorcentage(pair) {\n    switch (pair) {\n      case 'EURUSD':\n        return 1;\n        break;\n\n      case 'EURARS':\n        return 3;\n        break;\n\n      case 'EURBRL':\n        return 4;\n        break;\n\n      case 'USDARS':\n        return 2;\n        break;\n\n      case 'USDBRL':\n        return 1;\n        break;\n\n      case 'BRLARS':\n        return 7;\n        break;\n\n      default:\n        return 5;\n        break;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/ulises/Documentos/ULISES/CV/challenge/web-interface/src/logic/FXtaxes.js"],"names":["FX","constructor","LoadingFxStatus","fixerServer","RatesMap","Map","fetch","then","res","json","data","success","fixerData","refreshRatesValues","set","rates","USD","ARS","BRL","getRate","pair","amount","rateObj","convertAmount","get","toFixed","fee","getFeePorcentage","feeAmount","markAmount","mark"],"mappings":"AACA,eAAe,MAAMA,EAAN,CAAS;AAEpBC,EAAAA,WAAW,CAACC,eAAD,EAAkB;AACzB,SAAKC,WAAL,GAAmB,6EAAnB;AACA,SAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACA,SAAKH,eAAL,GAAuBA,eAAvB;AAEAI,IAAAA,KAAK,CAAC,KAAKH,WAAN,CAAL,CACCI,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,OAAT,EAAkB;AACd,aAAKC,SAAL,GAAiBF,IAAjB;AACA,aAAKG,kBAAL;AACA,aAAKX,eAAL,CAAqB,IAArB;AACH,OAJD,MAIO;AACH,aAAKA,eAAL,CAAqB,KAArB;AACH;AACJ,KAVD;AAWH;;AAEDW,EAAAA,kBAAkB,GAAI;AAClB,SAAKT,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBC,GAAjD;AACA,SAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAAjD;AACA,SAAKb,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBG,GAAjD;AACA,SAAKd,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAArB,GAA2B,KAAKL,SAAL,CAAeG,KAAf,CAAqBC,GAA5E;AACA,SAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBG,GAArB,GAA2B,KAAKN,SAAL,CAAeG,KAAf,CAAqBC,GAA5E;AACA,SAAKZ,QAAL,CAAcU,GAAd,CAAkB,QAAlB,EAA4B,KAAKF,SAAL,CAAeG,KAAf,CAAqBE,GAArB,GAA2B,KAAKL,SAAL,CAAeG,KAAf,CAAqBG,GAA5E;AACH;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAOC,MAAP,EAAc;AACjB,QAAIC,OAAO,GAAG,EAAd;AAEAA,IAAAA,OAAO,CAACC,aAAR,GAAwB,CAAE,KAAKnB,QAAL,CAAcoB,GAAd,CAAkBJ,IAAlB,IAA0BC,MAA5B,EAAoCI,OAApC,CAA4C,CAA5C,CAAxB;AACAH,IAAAA,OAAO,CAACI,GAAR,GAAcC,gBAAgB,CAACP,IAAD,CAA9B;AACA,QAAIQ,SAAS,GAAGP,MAAM,IAAIM,gBAAgB,CAACP,IAAD,CAAhB,GAAyB,GAA7B,CAAtB;AACAE,IAAAA,OAAO,CAACM,SAAR,GAAoBA,SAAS,CAACH,OAAV,CAAkB,CAAlB,CAApB;AACA,QAAII,UAAU,GAAGR,MAAM,GAAGO,SAA1B;AACAN,IAAAA,OAAO,CAACQ,IAAR,GAAeD,UAAU,CAACJ,OAAX,CAAmB,CAAnB,CAAf;AACA,WAAOH,OAAP;AACH;;AAEDK,EAAAA,gBAAgB,CAACP,IAAD,EAAO;AACnB,YAAOA,IAAP;AAEI,WAAK,QAAL;AACI,eAAO,CAAP;AACJ;;AACA,WAAK,QAAL;AACI,eAAO,CAAP;AACJ;;AACA,WAAK,QAAL;AACI,eAAO,CAAP;AACJ;;AACA,WAAK,QAAL;AACI,eAAO,CAAP;AACJ;;AACA,WAAK,QAAL;AACI,eAAO,CAAP;AACJ;;AACA,WAAK,QAAL;AACI,eAAO,CAAP;AACJ;;AACA;AACI,eAAO,CAAP;AACJ;AAtBJ;AAwBH;;AAlEmB","sourcesContent":["\nexport default class FX {\n\n    constructor(LoadingFxStatus) {\n        this.fixerServer = 'http://data.fixer.io/api/latest?access_key=ffcc344a3f31700c0020d166fd17ea96';\n        this.RatesMap = new Map();\n        this.LoadingFxStatus = LoadingFxStatus;\n\n        fetch(this.fixerServer)\n        .then(res => res.json())\n        .then(data => {\n            if (data.success) {\n                this.fixerData = data;\n                this.refreshRatesValues();\n                this.LoadingFxStatus('OK');\n            } else {\n                this.LoadingFxStatus('ERR');\n            }       \n        });\n    }\n\n    refreshRatesValues () {\n        this.RatesMap.set('EURUSD', this.fixerData.rates.USD);\n        this.RatesMap.set('EURARS', this.fixerData.rates.ARS);\n        this.RatesMap.set('EURBRL', this.fixerData.rates.BRL);\n        this.RatesMap.set('USDARS', this.fixerData.rates.ARS / this.fixerData.rates.USD);\n        this.RatesMap.set('USDBRL', this.fixerData.rates.BRL / this.fixerData.rates.USD);\n        this.RatesMap.set('BRLARS', this.fixerData.rates.ARS / this.fixerData.rates.BRL); \n    }\n\n    getRate(pair, amount){\n        let rateObj = {};\n\n        rateObj.convertAmount = ( this.RatesMap.get(pair) * amount).toFixed(2);\n        rateObj.fee = getFeePorcentage(pair);\n        let feeAmount = amount * (getFeePorcentage(pair) / 100);\n        rateObj.feeAmount = feeAmount.toFixed(2);\n        let markAmount = amount + feeAmount; \n        rateObj.mark = markAmount.toFixed(2);\n        return rateObj;\n    }\n\n    getFeePorcentage(pair) {\n        switch(pair)\n        {\n            case 'EURUSD':\n                return 1;\n            break;\n            case 'EURARS':\n                return 3;\n            break;\n            case 'EURBRL':\n                return 4;\n            break;\n            case 'USDARS':\n                return 2;\n            break;\n            case 'USDBRL':\n                return 1;\n            break;\n            case 'BRLARS':\n                return 7;\n            break;\n            default:\n                return 5;\n            break;\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}